<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Gerenciar Usuários</h2>
    <div>
        <button class="btn btn-secondary me-2" data-bs-toggle="modal" data-bs-target="#globalSessionModal">
            <i class="fas fa-cog me-1"></i>Configurar Sessões
        </button>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">
            <i class="fas fa-plus me-2"></i>Adicionar Usuário
        </button>
    </div>
</div>

<div class="table-container">
    <div class="table-responsive">
        <table class="table" id="usersTable">
            <thead>
                <tr>
                    <th>Email</th>
                    <th>Status</th>
                    <th>Último Login</th>
                    <th>Limite Sessões</th>
                    <th>Duração Sessão (min)</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                <% users.forEach(user => { %>
                <tr data-email="<%= user.email %>">
                    <td><%= user.email %></td>
                    <td>
                        <% if(user.verified) { %>
                            <span class="badge bg-success">Verificado</span>
                        <% } else { %>
                            <span class="badge bg-warning">Pendente</span>
                        <% } %>
                    </td>
                    <td><%= user.lastLogin ? new Date(user.lastLogin).toLocaleString() : 'Nunca' %></td>
                    <td>
                        <input type="number" class="form-control form-control-sm max-sessions" value="<%= user.maxSessions || 3 %>" min="1" style="width: 80px;">
                    </td>
                    <td>
                        <input type="number" class="form-control form-control-sm session-duration" value="<%= user.sessionDuration || 5 %>" min="1" style="width: 80px;">
                    </td>
                    <td>
                        <button class="btn btn-warning btn-action reset-session" title="Resetar Sessão">
                            <i class="fas fa-redo"></i>
                        </button>
                        <button class="btn btn-danger btn-action delete-user" title="Remover Usuário">
                            <i class="fas fa-trash"></i>
                        </button>
                        <button class="btn btn-success btn-action save-settings" title="Salvar Configurações">
                            <i class="fas fa-save"></i>
                        </button>
                    </td>
                </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</div>

<!-- Global Session Modal -->
<div class="modal fade" id="globalSessionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Configurações Globais de Sessão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="globalSessionForm">
                    <div class="mb-3">
                        <label class="form-label">Limite de Sessões Padrão</label>
                        <input type="number" class="form-control" id="globalMaxSessions" min="1" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Duração da Sessão (minutos)</label>
                        <input type="number" class="form-control" id="globalSessionDuration" min="1" required>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="applyToAll">
                        <label class="form-check-label" for="applyToAll">
                            Aplicar estas configurações para todos os usuários
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="saveGlobalSession">Salvar</button>
            </div>
        </div>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Adicionar Novo Usuário</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addUserForm">
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="addUserBtn">Adicionar</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const GLOBAL_DEFAULTS = {
            maxSessions: <%= globalSettings.maxSessions %>,
            sessionDuration: <%= globalSettings.sessionDuration %>
        };
        document.getElementById('addUserBtn').addEventListener('click', async function() {
            const email = document.getElementById('email').value;
            try {
                const response = await fetch('/admin/users', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email })
                });
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Erro ao adicionar usuário');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Erro ao adicionar usuário');
            }
        });
        document.querySelectorAll('.reset-session').forEach(button => {
            button.addEventListener('click', async function() {
                const email = this.closest('tr').dataset.email;
                const row = this.closest('tr');
                if (confirm(`Resetar sessão para ${email}?`)) {
                    try {
                        const response = await fetch(`/admin/users/${email}/reset-session`, {
                            method: 'POST'
                        });
                        if (response.ok) {
                            alert('Sessão resetada com sucesso');
                            row.querySelector('.max-sessions').value = GLOBAL_DEFAULTS.maxSessions;
                            row.querySelector('.session-duration').value = GLOBAL_DEFAULTS.sessionDuration;
                        } else {
                            alert('Erro ao resetar sessão');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('Erro ao resetar sessão');
                    }
                }
            });
        });
        document.querySelectorAll('.save-settings').forEach(button => {
            button.addEventListener('click', async function() {
                const row = this.closest('tr');
                const email = row.dataset.email;
                const maxSessions = parseInt(row.querySelector('.max-sessions').value);
                const sessionDuration = parseInt(row.querySelector('.session-duration').value);
                try {
                    const response = await fetch(`/admin/users/${email}/session-settings`, {
                        method: 'PUT',
                        headers: {'Content-Type': 'application/json'},
                        body: JSON.stringify({ maxSessions, sessionDuration })
                    });
                    if (response.ok) {
                        alert('Configurações salvas');
                    } else {
                        alert('Erro ao salvar configurações');
                    }
                } catch (error) {
                    alert('Erro ao salvar configurações');
                }
            });
        });
        document.getElementById('saveGlobalSession').addEventListener('click', async function() {
            const maxSessions = parseInt(document.getElementById('globalMaxSessions').value);
            const sessionDuration = parseInt(document.getElementById('globalSessionDuration').value);
            const applyToAll = document.getElementById('applyToAll').checked;
            try {
                const response = await fetch('/admin/settings/global', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ maxSessions, sessionDuration, applyToAll })
                });
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Erro ao salvar configurações globais');
                }
            } catch (error) {
                alert('Erro ao salvar configurações globais');
            }
        });
        document.querySelectorAll('.delete-user').forEach(button => {
            button.addEventListener('click', async function() {
                const email = this.closest('tr').dataset.email;
                if (confirm(`Remover usuário ${email}?`)) {
                    try {
                        const response = await fetch(`/admin/users/${email}`, {
                            method: 'DELETE'
                        });
                        if (response.ok) {
                            this.closest('tr').remove();
                        } else {
                            alert('Erro ao remover usuário');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('Erro ao remover usuário');
                    }
                }
            });
        });
        document.getElementById('globalMaxSessions').value = <%= globalSettings.maxSessions %>;
        document.getElementById('globalSessionDuration').value = <%= globalSettings.sessionDuration %>;
    });
</script>
