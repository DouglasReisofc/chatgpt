<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Configurações do Sistema</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .sidebar {
            min-height: 100vh;
            background: #2c3e50;
            color: white;
        }
        .nav-link {
            color: rgba(255,255,255,.8);
            padding: 1rem;
            border-radius: 8px;
            margin: 0.2rem 0;
        }
        .nav-link:hover {
            background: rgba(255,255,255,.1);
            color: white;
        }
        .nav-link.active {
            background: #3498db;
            color: white;
        }
        .settings-card {
            border-radius: 15px;
            border: none;
            box-shadow: 0 4px 6px rgba(0,0,0,.1);
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3 col-lg-2 px-0 position-fixed sidebar">
                <div class="p-3">
                    <h4 class="text-center mb-4">Admin Panel</h4>
                    <div class="nav flex-column">
                        <a href="/admin/dashboard" class="nav-link">
                            <i class="fas fa-tachometer-alt me-2"></i>Dashboard
                        </a>
                        <a href="/admin/users" class="nav-link">
                            <i class="fas fa-users me-2"></i>Usuários
                        </a>
                        <a href="/admin/logs" class="nav-link">
                            <i class="fas fa-file-alt me-2"></i>Logs
                        </a>
                        <a href="/admin/settings" class="nav-link active">
                            <i class="fas fa-cog me-2"></i>Configurações
                        </a>
                        <a href="/admin/logout" class="nav-link text-danger mt-auto">
                            <i class="fas fa-sign-out-alt me-2"></i>Sair
                        </a>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-9 col-lg-10 ms-auto px-4 py-3">
                <h2 class="mb-4">Configurações do Sistema</h2>

                <!-- Session Settings Card -->
                <div class="card settings-card">
                    <div class="card-body">
                        <h4 class="card-title mb-4">Configurações Globais de Sessão</h4>
                        <form id="globalSettingsForm">
                            <div class="row g-3 mb-3">
                                <div class="col-md-6">
                                    <label for="globalMaxSessions" class="form-label">Limite de Sessões Padrão</label>
                                    <input type="number" id="globalMaxSessions" class="form-control" min="1" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="globalSessionDuration" class="form-label">Duração da Sessão (minutos)</label>
                                    <input type="number" id="globalSessionDuration" class="form-control" min="1" required>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary">Salvar Configurações</button>
                        </form>
                        <div id="globalSettingsMessage" class="mt-3"></div>
                    </div>
                </div>

                <!-- IP Blocking Card -->
                <div class="card settings-card">
                    <div class="card-body">
                        <h4 class="card-title mb-4">Bloqueio de IPs</h4>
                        <form id="ipBlockForm" class="mb-4">
                            <div class="row g-3">
                                <div class="col-md-8">
                                    <input type="text" id="ipAddress" class="form-control" placeholder="Digite o endereço IP" pattern="^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$" required>
                                </div>
                                <div class="col-md-4">
                                    <button type="submit" class="btn btn-danger w-100">Bloquear IP</button>
                                </div>
                            </div>
                        </form>
                        <div class="table-responsive">
                            <table class="table" id="blockedIpsTable">
                                <thead>
                                    <tr>
                                        <th>Endereço IP</th>
                                        <th>Data de Bloqueio</th>
                                        <th>Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% blockedIps.forEach(ip => { %>
                                    <tr>
                                        <td><%= ip.address %></td>
                                        <td><%= new Date(ip.blockedAt).toLocaleString() %></td>
                                        <td>
                                            <button class="btn btn-sm btn-success unblock-ip" data-ip="<%= ip.address %>">
                                                Desbloquear
                                            </button>
                                        </td>
                                    </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Log Reset Card -->
                <div class="card settings-card">
                    <div class="card-body">
                        <h4 class="card-title mb-4">Gerenciamento de Logs</h4>
                        <p class="text-danger">Atenção: Esta ação irá apagar permanentemente todos os logs do sistema.</p>
                        <button id="resetLogsBtn" class="btn btn-danger">
                            <i class="fas fa-trash-alt me-2"></i>Resetar Todos os Logs
                        </button>
                    </div>
                </div>

                <!-- Session Reset Card -->
                <div class="card settings-card">
                    <div class="card-body">
                        <h4 class="card-title mb-4">Gerenciamento de Sessões</h4>
                        <p class="text-danger">Esta ação encerra todas as sessões ativas.</p>
                        <button id="resetSessionsBtn" class="btn btn-warning">
                            <i class="fas fa-power-off me-2"></i>Resetar Sessões
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Reset Logs Confirmation Modal -->
    <div class="modal fade" id="resetLogsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar Reset de Logs</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Você tem certeza que deseja apagar todos os logs do sistema? Esta ação não pode ser desfeita.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-danger" id="confirmResetLogs">Confirmar Reset</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const globalSettingsForm = document.getElementById('globalSettingsForm');
            const ipBlockForm = document.getElementById('ipBlockForm');
            const resetLogsBtn = document.getElementById('resetLogsBtn');
            const resetLogsModal = new bootstrap.Modal(document.getElementById('resetLogsModal'));
            const confirmResetLogsBtn = document.getElementById('confirmResetLogs');
            const resetSessionsBtn = document.getElementById('resetSessionsBtn');

            // Load initial values
            const maxSessionsInput = document.getElementById('globalMaxSessions');
            const sessionDurationInput = document.getElementById('globalSessionDuration');
            maxSessionsInput.value = <%= globalSettings.maxSessions %>;
            sessionDurationInput.value = <%= globalSettings.sessionDuration %>;

            // Global Settings Form
            globalSettingsForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                const maxSessions = parseInt(maxSessionsInput.value);
                const sessionDuration = parseInt(sessionDurationInput.value);

                try {
                    const response = await fetch('/admin/settings/global', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ maxSessions, sessionDuration })
                    });

                    if (response.ok) {
                        showMessage('globalSettingsMessage', 'Configurações salvas com sucesso!', 'success');
                    } else {
                        showMessage('globalSettingsMessage', 'Erro ao salvar configurações.', 'danger');
                    }
                } catch (error) {
                    showMessage('globalSettingsMessage', 'Erro ao salvar configurações.', 'danger');
                }
            });

            // IP Block Form
            ipBlockForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                const ipAddress = document.getElementById('ipAddress').value;

                try {
                    const response = await fetch('/admin/settings/block-ip', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ ip: ipAddress })
                    });

                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Erro ao bloquear IP.');
                    }
                } catch (error) {
                    alert('Erro ao bloquear IP.');
                }
            });

            // Unblock IP buttons
            document.querySelectorAll('.unblock-ip').forEach(button => {
                button.addEventListener('click', async function() {
                    const ip = this.dataset.ip;
                    try {
                        const response = await fetch('/admin/settings/unblock-ip', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ ip })
                        });

                        if (response.ok) {
                            location.reload();
                        } else {
                            alert('Erro ao desbloquear IP.');
                        }
                    } catch (error) {
                        alert('Erro ao desbloquear IP.');
                    }
                });
            });

            // Reset Logs
            resetLogsBtn.addEventListener('click', () => resetLogsModal.show());

            confirmResetLogsBtn.addEventListener('click', async function() {
                try {
                    const response = await fetch('/admin/settings/reset-logs', {
                        method: 'POST'
                    });

                    if (response.ok) {
                        resetLogsModal.hide();
                        location.reload();
                    } else {
                        alert('Erro ao resetar logs.');
                    }
                } catch (error) {
                    alert('Erro ao resetar logs.');
                }
            });

            // Reset Sessions
            resetSessionsBtn.addEventListener('click', async function() {
                if(confirm('Deseja encerrar todas as sessões ativas?')) {
                    try {
                        const response = await fetch('/admin/settings/reset-sessions', { method: 'POST' });
                        if (response.ok) {
                            alert('Sessões resetadas');
                        } else {
                            alert('Erro ao resetar sessões');
                        }
                    } catch (error) {
                        alert('Erro ao resetar sessões');
                    }
                }
            });

            function showMessage(elementId, message, type) {
                const element = document.getElementById(elementId);
                element.className = `alert alert-${type} mt-3`;
                element.textContent = message;
                setTimeout(() => element.remove(), 3000);
            }
        });
    </script>
</body>
</html>
